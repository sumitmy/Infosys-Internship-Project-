package com.example.OnlineRecruitment.Controllers;

import java.io.IOException;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import com.example.OnlineRecruitment.Entities.JobSeeker;
import com.example.OnlineRecruitment.Services.JobSeekerService;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.ObjectMapper;

@RestController
@CrossOrigin("http://localhost:4200")
public class JobSeekerController {

	@Autowired
	private JobSeekerService jobSeekerService;
	
	@PostMapping("/jobseeker")
	public String createJobSeeker(@RequestParam("file") MultipartFile file,
            @RequestParam("jobSeekerData") String jobSeekerData) throws IOException{
	
            JobSeeker jobSeeker = null;
			
				jobSeeker = new ObjectMapper().readValue(jobSeekerData, JobSeeker.class);
				jobSeeker.toString();
				jobSeeker.getGraduate().setStudentId(Long.valueOf(jobSeeker.getGraduate().getStudentId()));
         return jobSeekerService.createJobSeeker(jobSeeker, file);
           
	}
	
	@PostMapping("/jobseeker/{applicationId}")
	public String uploadResume(@RequestPart MultipartFile file,@PathVariable String applicationId) {
		return jobSeekerService.uploadResume(file,applicationId);
	}
	
	@GetMapping("/jobseekerall")
	public List<JobSeeker> alljobSeeker(){
		return jobSeekerService.getalljobseeker();
	}
	
	@GetMapping("/jobseeker/{employeeId}")
	public List<JobSeeker> alljobSeekeremployeeId(@PathVariable String employeeId){
		return jobSeekerService.getalljobseekerbyemployeeId(employeeId);
	}
	
	@GetMapping("/jobseekergraduate/{studentId}")
	public List<JobSeeker> allJobSeekerStudentId(@PathVariable String studentId){
		return jobSeekerService.getAlljobsByStudentId(studentId);
	}
}
